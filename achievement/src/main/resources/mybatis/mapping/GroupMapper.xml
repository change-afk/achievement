<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.change.achievement.mapper.GroupMapper">
  <resultMap id="BaseResultMap" type="com.change.achievement.entity.Group">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="tid" jdbcType="VARCHAR" property="tid" />
    <result column="gname" jdbcType="VARCHAR" property="gname" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
  </resultMap>
  <sql id="Base_Column_List">
    gid, tid, gname, sid
  </sql>
  <!-- 根据课题名字查询详细信息  前台系统 -->
  <select id="selectGroupByGname" parameterType="java.lang.String" resultType="hashmap">
    select t.*,g.gname,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and gname=#{gname,jdbcType=VARCHAR} and tname=#{tname,jdbcType=VARCHAR}
	GROUP BY g.tid,g.gname
  </select>
  <!-- 前台查询全部课题组信息 -->
  <select id="selectFore" resultType="hashmap">
    select t.*,g.gname,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid
	GROUP BY g.tid,g.gname
	limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <!-- 前台查询全部课题组信息总条数 -->
  <select id="selectForeSize" resultType="java.lang.Integer">
    select count(*)from(
	select t.*,g.gname,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid
	GROUP BY g.tid,g.gname)as cou
  </select>
  <!-- 查询课题组成员 -->
  <select id="selectGroupMenber" parameterType="java.lang.String" resultType="hashmap">
    SELECT * from(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb where sname like "%"#{msg}"%"
  </select>
  <!-- 新增 -->
  <insert id="addMember" parameterType="com.change.achievement.entity.Group">
    insert into t_group (tid, gname, sid)
    values (#{tid,jdbcType=VARCHAR}, #{gname,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER})
  </insert>
  <!-- 查询数据总条数、分页 -->
  <select id="getAllPage" resultType="java.lang.Integer">
    select count(*) from(
	select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid
	GROUP BY g.tid,g.gname
	) as ataa
  </select>
  <!-- 查询分页后的数据 -->
  <select id="selectByPage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid
	GROUP BY g.tid,g.gname
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
   <!-- 条件查询数据总条数、分页 -->
  <select id="getSearchAllPage" parameterType="java.lang.String" resultType="java.lang.Integer">
 	select count(*) from(
	select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and concat(g.gname,t.tname) like "%"#{msg}"%"
	GROUP BY g.tid,g.gname
	) as ataa
  </select>
   <!-- 条件查询数据分页后展示的数据-->
  <select id="getSearchPage" parameterType="hashmap" resultMap="BaseResultMap">
    select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and concat(g.gname,t.tname) like "%"#{msg}"%"
	GROUP BY g.tid,g.gname
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <!-- 查询数据总条数、分页(教师) -->
  <select id="getAllPageT" resultType="java.lang.Integer">
    select count(*) from(
	select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and t.tid=#{tid}
	GROUP BY g.tid,g.gname
	) as ataa
  </select>
  <!-- 查询分页后的数据(教师) -->
  <select id="selectByPageT" parameterType="hashmap" resultMap="BaseResultMap">
    select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and t.tid=#{tid}
	GROUP BY g.tid,g.gname
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
   <!-- 条件查询数据总条数、分页(教师) -->
  <select id="getSearchAllPageT" parameterType="java.lang.String" resultType="java.lang.Integer">
 	select count(*) from(
	select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and t.tid=#{tid} and concat(g.gname,t.tname) like "%"#{msg}"%"
	GROUP BY g.tid,g.gname
	) as ataa
  </select>
   <!-- 条件查询数据分页后展示的数据(教师)-->
  <select id="getSearchPageT" parameterType="hashmap" resultMap="BaseResultMap">
    select any_value(g.gid) as gid,any_value(g.gname) as gname,t.tname,t.tid,GROUP_CONCAT(
	atb.sname  ORDER BY atb.sname  DESC SEPARATOR ','
	)as sname from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g,t_teacher t
	where g.sid=atb.sid and t.tid=g.tid and t.tid=#{tid} and concat(g.gname,t.tname) like "%"#{msg}"%"
	GROUP BY g.tid,g.gname
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <!-- 根据条件查询信息 -->
  <select id="selectGroupByMeg" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT atb.sid,atb.sname,atb.sex,atb.sedu,g.tid,g.gname,g.gid from 
	(
	select s.sid,s.sname,s.sex,s.sedu
	from t_student s
	UNION ALL
	select t.tid,t.tname,t.tsex,t.tdegree
	from t_teacher t
	) as atb,t_group g
	where g.sid=atb.sid and gname=#{gname} and tid=#{tid}
  </select>
  <!-- 根据条件删除数据 -->
  <delete id="deleteByMsg" parameterType="java.lang.String">
    delete from t_group
    where tid=#{tid} and gname=#{gname}
  </delete>
  
  
  
  <insert id="insertSelective" parameterType="com.change.achievement.entity.Group">
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="gname != null">
        gname,
      </if>
      <if test="sid != null">
        sid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="gname != null">
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.change.achievement.entity.Group">
    update t_group
    <set>
      <if test="tid != null">
        tid = #{tid,jdbcType=VARCHAR},
      </if>
      <if test="gname != null">
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=VARCHAR},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.change.achievement.entity.Group">
    update t_group
    set tid = #{tid,jdbcType=VARCHAR},
      gname = #{gname,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=VARCHAR}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>