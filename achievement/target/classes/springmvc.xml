<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd"> 

	<!-- mvc 注解驱动 -->
	<mvc:annotation-driven />

	<!-- 配置拦截器 -->
	<!-- 	<mvc:interceptors>
			<mvc:interceptor>
				拦截所有mvc控制器
				<mvc:mapping path="/**"/>
				mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
					LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选)
				<mvc:exclude-mapping path="/views/common/**" />
				<mvc:exclude-mapping path="/views/css/**" />
				<mvc:exclude-mapping path="/views/forejsp/**" />
				<mvc:exclude-mapping path="/views/images/**" />
				<mvc:exclude-mapping path="/views/js/**" />
				<mvc:exclude-mapping path="/views/jslib/**" />
				<mvc:exclude-mapping path="/views/json/**" />
				<mvc:exclude-mapping path="/views/jsplug/**" />
				<mvc:exclude-mapping path="/views/layuiadmin/**" />
				<mvc:exclude-mapping path="/views/foreindex.jsp" />
				<mvc:exclude-mapping path="/views/login.jsp" />
				<bean class="com.change.achievement.util.LoginInterceptor"></bean>			
			</mvc:interceptor>
		</mvc:interceptors> -->
	
	<!-- 扫描controller的位置 -->
	<context:component-scan
		base-package="com.change.achievement.controller" /> 

	<!-- 内容协商 根据扩展名和参数不同 返回不同的东西 客户端根据不同的扩展名返回不同的格式数据 -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /student/get.json => application/json -->
		<property name="favorPathExtension" value="true" />
		<!-- 用于开启 /student/get?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="false" />
		<!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property>
		<property name="defaultContentType" value="text/html" />
	</bean>

	<!-- 内容协商的解析器 配合内容协商器 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/views/" />
					<property name="suffix" value=".jsp"></property>
				</bean>
				
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<!-- view -->
				<bean
					class="com.alibaba.fastjson.support.spring.FastJsonJsonView" />
			</list>
		</property>
	</bean>
	<!-- 放行静态资源访问 -->
	<mvc:resources location="/views/" mapping="/views/**" />
	<!-- <mvc:resources location="/views/bootstrap/" mapping="/views/bootstrap/**" />
	<mvc:resources location="/views/common/" mapping="/views/common/**" />
	<mvc:resources location="/views/css/" mapping="/views/css/**" />
	<mvc:resources location="/views/image/" mapping="/views/image/**" />
	<mvc:resources location="/views/js/" mapping="/views/js/**" />
	<mvc:resources location="/views/json/" mapping="/views/json/**" />
	<mvc:resources location="/views/jsplug/" mapping="/views/jsplug/**" /> -->
	
	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>1000000</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- 异常处理器 -->
	<!-- <bean id="handlerExceptionResolver"
		class="net.room.exception.MyExceptionResolver" /> -->

</beans>